# TODO
# google doc: bashrc, venv, tmux, storing things locally on the machines themselves
train victims round robin
visualize victims
train a baseline attacker
train white box attackers: act/value, latents, both

# repos
https://github.com/PavelCz/multiagent-competition
https://github.com/HumanCompatibleAI/adversarial-policies
https://github.com/openai/multiagent-competition
https://github.com/HumanCompatibleAI/adversarial-policy-defense

# ssh
ssh scasper@align-2.csail.mit.edu

# env
python -m venv ~/mc_env
source ~/mc_env/bin/activate
python -m pip install patchelf numpy gym==0.19.0 scipy matplotlib Cython pyglet stable-baselines3 'mujoco-py>=2.1'
python -m pip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cu113
python -m pip install git+https://github.com/Stable-Baselines-Team/stable-baselines3-contrib.git@feat/ppo-lstm

# tmux and screen
tmux new -s session_name
tmux attach-session -t session_name
Ctrl+b c  # create window
Ctrl+b p  # previous window
Ctrl+b n  # next window
kinit && aklog
tmux ls
tmux kill-ses -t session_name
screen -S session_name
screen -r session_name
screen -X -S session_name quit
ctrl+a d

# .bashrc
export PS1="\e[0;32m\u@\h\e\e[0;37m:\e\e[0;34m\W\e\e[0;37m$\e[m "
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/afs/csail.mit.edu/u/s/scasper/.mujoco/mujoco210/bin
alias mac="cd ~/multiagent-competition/"
alias python="python3"
export CUDA_PATH=/usr
export PATH=/usr/local/cuda-11.3/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-11.3/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
export LD_LIBRARY_PATH=$HOME/.mujoco/mujoco210/bin:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/usr/local/cuda-11.3/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/nvidia
export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libGLEW.so
function tns(){
        tmux new -s $1
}
function tas() {
    tmux attach-session -t $1
}

# cuda and stuff
# https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html
# https://developer.nvidia.com/cuda-11-3-1-download-archive
sudo apt update
sudo apt-get install linux-headers-$(uname -r)
curl -O https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget https://developer.download.nvidia.com/compute/cuda/11.3.1/local_installers/cuda-repo-ubuntu2004-11-3-local_11.3.1-465.19.01-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu2004-11-3-local_11.3.1-465.19.01-1_amd64.deb
sudo apt-key add /var/cuda-repo-ubuntu2004-11-3-local/7fa2af80.pub
curl -O https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004-11-3-local/amd64/cuda-ubuntu2004-11-3-local.pin
sudo mv cuda-ubuntu2004-11-3-local.pin /etc/apt/preferences.d/cuda-repository-pin-600
sudo apt-get update  # might need to sudo rm something if it can't be parsed
sudo apt-get -y install cuda
sudo reboot
sudo apt-get install g++ freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libglu1-mesa libglu1-mesa-dev libfreeimage-dev libosmesa6-dev libgl1-mesa-glx libglfw3 ffmpeg
update-alternatives --display cuda  # check the version

# vagrant box
cd ~/mc-vm
vagrant up
vagrant ssh
sudo apt update
sudo apt install g++ freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libglu1-mesa libglu1-mesa-dev libfreeimage-dev libosmesa6-dev libgl1-mesa-glx libglfw3 software-properties-common libglfw3-dev ffmpeg software-properties-common xvfb
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install python3.8 python3.8-venv python3.8-dev
sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2
alias python=python3
python -m venv ~/mc_env
source ~/mc_env/bin/activate
pip install wheel
python -m pip install -U --force-reinstall pip
python -m pip install pip==20.0.2
python -m pip install patchelf numpy gym==0.19.0 scipy Cython pyglet Pillow 'mujoco-py>=2.1' stable-baselines3 torch
python -m pip install git+https://github.com/Stable-Baselines-Team/stable-baselines3-contrib.git@feat/ppo-lstm
cd
scp -r scasper@align-2.csail.mit.edu:/afs/csail.mit.edu/u/s/scasper/multiagent-competition .
mkdir .mujoco ; cd .mujoco
wget https://mujoco.org/download/mujoco210-linux-x86_64.tar.gz
tar -xvf *.gz
rm *.gz
cd
# add to bashrc
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/vagrant/.mujoco/mujoco210/bin

